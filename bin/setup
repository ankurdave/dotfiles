#!/bin/bash

set -eu

dotfiles=$(cd $(dirname $0)/.. && pwd)

command_exists () {
    type "$1" &> /dev/null ;
}

symlink () {
    file=$1
    target=$2

    # Back up real files (not symlinks) to ~/config-old/
    if [[ -e "$target" && ! -L "$target" ]]
    then
        echo "Moving old version of $target to ~/config-old/$(basename "$file")"
        mkdir -p ~/config-old/
        mv "$target" ~/config-old/
    fi

    # Just delete symlinks, because they are probably from a previous run
    if [[ -L "$target" ]]
    then
        rm "$target"
    fi

    echo "Symlinking $target"
    ln -s "$file" "$target"
}

hardlink () {
    file="$1"
    target="$2"

    # Back up files to ~/config-old/
    if [[ -e "$target" ]]
    then
        echo "Moving old version of $target to ~/config-old/$(basename "$file")"
        mkdir -p ~/config-old/
        if ! [[ "$target" -ef ~/config-old/"$(basename "$target")" ]]; then
            mv "$target" ~/config-old/
        fi
    fi

    echo "Hardlinking $target"
    ln -f "$file" "$target"
}

if [ -d "$HOME/Dropbox/history" ]; then
    symlink $HOME/Dropbox/history ~/history
else
    mkdir -p ~/history
fi

# Link dotfiles into ~ and back up the old dotfiles into ~/config-old
find "$dotfiles" -mindepth 1 -maxdepth 1 -not \( \
    -iname '*~' -or \
    -iname '*#*' -or \
    -iname '.hg' -or \
    -iname '.git' -or \
    -iname '.gitmodules' -or \
    -iname 'bin' -or \
    -iname 'misc' -or \
    -iname 'afew' \
    \) | while read file; do
    symlink "$file" ~/"$(basename "$file")"
done

mkdir -p ~/.config/afew
find "$dotfiles"/misc/afew -mindepth 1 -maxdepth 1 | while read file; do
    symlink "$file" ~/.config/afew/"$(basename "$file")"
done

mkdir -p ~/.sbt/0.13
symlink "$dotfiles"/misc/ctags.sbt ~/.sbt/0.13/ctags.sbt

# OS X setup
if [ -d ~/Library ] && command_exists defaults; then
    brew bundle install --global --verbose
    pip install --upgrade -r "$dotfiles"/misc/pip-global-requirements.txt

    mkdir -p ~/Library/KeyBindings
    hardlink "$dotfiles"/misc/DefaultKeyBinding.dict \
             ~/Library/KeyBindings/DefaultKeyBinding.dict

    mkdir -p ~/Library/Preferences
    hardlink "$dotfiles"/misc/com.googlecode.iterm2.plist \
             ~/Library/Preferences/com.googlecode.iterm2.plist

    # Launch agents
    find "$dotfiles"/misc -mindepth 1 -maxdepth 1 \
         -name 'com.ankurdave.*.plist' | while read file; do
        hardlink "$file" ~/Library/LaunchAgents/"$(basename "$file")"
    done

    ## From https://github.com/mathiasbynens/dotfiles/blob/master/.macos:
    # Disable the sound effects on boot
    sudo nvram SystemAudioVolume=" "
    # Disable transparency in the menu bar and elsewhere on Yosemite
    defaults write com.apple.universalaccess reduceTransparency -bool true
    # Disable Resume system-wide
    defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
    # Enable full keyboard access for all controls
    # (e.g. enable Tab in modal dialogs)
    defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
    # Faster keyboard repeat rate
    defaults write NSGlobalDomain KeyRepeat -int 2
    defaults write NSGlobalDomain InitialKeyRepeat -int 15
    # Finder: show hidden files by default
    defaults write com.apple.finder AppleShowAllFiles YES
    defaults write NSGlobalDomain AppleShowAllExtensions YES
    # Disable the warning when changing a file extension
    defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
    # Use list view in all Finder windows by default
    # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
    defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
    # Speed up Mission Control animations
    defaults write com.apple.dock expose-animation-duration -float 0.1
    # Prevent Photos from opening automatically when devices are plugged in
    defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true
    # Disable local Time Machine backups
    hash tmutil &> /dev/null && sudo tmutil disablelocal
    # Disable Spotlight indexing for any volume that gets mounted and has not yet
    # been indexed before.
    # Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
    sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"
    # Donâ€™t prompt for confirmation before downloading
    defaults write org.m0k.transmission DownloadAsk -bool false
    defaults write org.m0k.transmission MagnetOpenAsk -bool false
    # IP block list.
    # Source: https://giuliomac.wordpress.com/2014/02/19/best-blocklist-for-transmission/
    defaults write org.m0k.transmission BlocklistNew -bool true
    defaults write org.m0k.transmission BlocklistURL -string "http://john.bitsurge.net/public/biglist.p2p.gz"
    defaults write org.m0k.transmission BlocklistAutoUpdate -bool true

    # Bottom left screen corner puts display to sleep
    defaults write com.apple.dock wvous-bl-corner -int 10
    defaults write com.apple.dock wvous-bl-modifier -int 0

    # Other prefs
    defaults write com.apple.finder CreateDesktop false
    defaults write -app Skim SKAutoReloadFileUpdate -boolean true
fi
